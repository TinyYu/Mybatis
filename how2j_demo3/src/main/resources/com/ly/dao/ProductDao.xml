<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ly.dao.ProductDao">
    <!-- if判断 -->
    <select id="listProduct" parameterType="string" resultType="product">
        select * from product_
        <if test="name != null">
           where name like #{name}
        </if>
    </select>


    <!--
        <where>标签会进行自动判断
            如果任何条件都不成立，那么就在sql语句里就不会出现where关键字
            如果有任何条件成立，会自动去掉多出来的 and 或者 or。
    -->
    <select id="listProducts" resultType="product">
        select * from product_
        <where>
            <if test="name != null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="price != null and price != 0">
                and price > #{price}
            </if>
        </where>
    </select>

    <!--
        <set>标签于<where>标签类似，只不过作用于update
    -->
    <update id="updateProduct">
        update product_
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="price != null and price != 0">
                price = #{price}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--
        when otherwise 代替 if else
    -->
    <select id="listProductElse" resultType="product">
        select * from product_
        <where>
            <choose>
                <when test="name != null">
                    and name = #{name}
                </when>
                <when test="price != null and price != 0">
                    and price = #{price}
                </when>
                <otherwise>
                    and id > 1
                </otherwise>
            </choose>
        </where>

    </select>

    <!--
        for
    -->
    <select id="listProductFor" resultType="product">
        select * from product_ where id in
        <foreach collection="productId" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>